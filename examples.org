#+PROPERTY: ANKI_DECK Default

* Deck in file
  :PROPERTIES:
  :ANKI_NOTE_TYPE: Cloze
  :END:

** Text

   Cards of this note will be created in {{c1::Default::which deck?}}

* Deck in entry
  :PROPERTIES:
  :ANKI_DECK: Languages
  :ANKI_NOTE_TYPE: Cloze
  :END:

** Text

   Cards of this note will be created in {{c1::Languages::which deck?}}

* Raw fields
  :PROPERTIES:
  :ANKI_NOTE_TYPE: Basic
  :END:

** Front

   How to send the content of a field or fields to Anki as is?

** Back
   :PROPERTIES:
   :ANKI_EXPORTER: raw
   :END:

   With property <code>:ANKI_EXPORTER: raw</code>, content of the
   field will be sent to Anki <em>unprocessed</em>.  You can use
   whatever Anki supports, like HTML tags.
   <br>
   <br>
   This property is retrieved with inheritance, meaning that it can be
   set in any ancestor entries or at the top of the file with
   <code>#+PROPERTY: ANKI_EXPORTER raw</code>, it's also possible to
   override an outer level raw exporter with <code>:ANKI_EXPORTER:
   default</code>.

* Languages
  :PROPERTIES:
  :ANKI_DECK: Languages
  :END:

** Vocabulary

*** Raining                                            :vocab:idioms:english:
    :PROPERTIES:
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :END:

**** Front

     (it's) raining cats and dogs

**** Back

     it's raining very hard

** Grammar                                                  :grammar:english:

*** 名词从句
    :PROPERTIES:
    :ANKI_NOTE_TYPE: Basic
    :END:

**** Front

     名词从句有哪些形式？

**** Back

     1) That + 一个完整的句子, that无实际意义
     2) 由疑问句改装而成

** Dialects

*** Cantonese
    :PROPERTIES:
    :ANKI_NOTE_TYPE: Basic (and reversed card)
    :ANKI_TAGS: dialect cantonese
    :END:

**** Front

     食咗饭未吖？

**** Back

     吃过饭了没？

* Computing
  :PROPERTIES:
  :ANKI_DECK: Computing
  :END:

** Emacs Lisp                                        :lisp:emacs:programming:
   :PROPERTIES:
   :ANKI_NOTE_TYPE: Basic
   :END:

*** Front

    How to trap errors in emacs lisp ?

*** Back

    #+BEGIN_EXPORT html
    <div align="left">
    #+END_EXPORT

    #+BEGIN_SRC emacs-lisp
      (condition-case the-error
          ;; the protected form
          (progn
            (do-something-dangerous)
            (do-something-more-dangerous))
        ;; handlers
        (error-symbol1 (handler1 the-error))
        ((error-symbol2 error-symbol3 (handler the-error))))
    #+END_SRC

    #+BEGIN_EXPORT html
    </div>
    #+END_EXPORT

* Math
  :PROPERTIES:
  :ANKI_DECK: Mathematics
  :END:

** Dot product
   :PROPERTIES:
   :ANKI_NOTE_TYPE: Basic
   :END:

*** Front

    How to calculate the dot product of two vectors:

    \begin{equation*}
    \alpha = \{a_1, a_2, a_3\}, \beta = \{b_1, b_2, b_3\}
    \end{equation*}

*** Back

    \[\alpha \cdot \beta = a_1b_1 + a_2b_2 + a_3b_3\]
